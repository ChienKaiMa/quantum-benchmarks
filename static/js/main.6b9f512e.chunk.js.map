{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","data","X","H","T","CNOT","QCBM","QFT","state","title","evt","newState","this","setState","Grid","container","item","xs","align","List","component","aria-labelledby","ListItem","button","onClick","handleClick","ListItemText","primary","options","tooltips","callbacks","label","console","log","yLabel","xLabel","scales","yAxes","display","labelString","type","position","xAxes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAAe,I,iGCmIAA,E,kDAlHd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IAEDC,KAAO,CACX,EAAKC,EACL,EAAKC,EACL,EAAKC,EACL,KAAQC,EACR,KAAQC,EACR,IAAOC,GAER,EAAKC,MAAS,EAAKP,KAAKC,EACxB,EAAKM,MAAMC,MAAQ,IAZF,E,wDAeNC,GACX,IAAIC,EAAQ,aAAIF,MAAOC,GAAQE,KAAKX,KAAKS,IACzCE,KAAKC,SAASF,K,+BAGL,IAAD,OACP,OACA,gCACC,cAACG,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACC,oBAAIC,MAAO,SAAX,oCAGF,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IAEd,cAACH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACC,eAACE,EAAA,EAAD,CACCC,UAAU,MACVC,kBAAgB,wBAFjB,UAGC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,MAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,QAEvB,cAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,MAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,QAEvB,cAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,MAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,QAEvB,cAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,SAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,WAEvB,cAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,SAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,WAEvB,cAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAM,EAAKC,YAAY,QAAjD,SACC,cAACC,EAAA,EAAD,CAAcC,QAAQ,eAKzB,eAACb,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,UACA,oBAAIC,MAAO,SAAX,SAAsBN,KAAKJ,MAAMC,QAChC,cAAC,OAAD,CAAMR,KAAMW,KAAKJ,MAAMP,KAAM2B,QAAS,CACtCC,SAAU,CACNC,UAAW,CACPC,MAAO,SAACf,GAA8B,OAAnBgB,QAAQC,IAAIjB,GAAcA,EAAKkB,OAAS,OAC3DzB,MAAO,SAACO,GAAmE,OAAxDA,EAAK,GAAGmB,OAASnB,EAAK,GAAGmB,OAAS,EAAGH,QAAQC,IAAIjB,GAAcA,EAAK,GAAGmB,OAAS,aAG1GC,OAAO,CACPC,MAAO,CACN,CACCC,SAAS,EACTC,YAAa,KACbC,KAAM,cACNC,SAAU,SAyBZC,MAAO,CACN,CACIH,YAAa,mBAQrB,cAACzB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,c,GA5GF0B,aCHHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6b9f512e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Button,ListItem, List, ListSubheader, ListItemText} from '@material-ui/core';\nimport { Line } from 'react-chartjs-2';\nimport X from './plots/X.json';\nimport H from './plots/H.json';\nimport T from './plots/T.json';\nimport CNOT from './plots/CNOT.json';\nimport QCBM from './plots/QCBM.json';\nimport QFT from './plots/QFT.json';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tlet data;\n\t\tthis.data = {\n\t\t\t\"X\": X,\n\t\t\t\"H\": H,\n\t\t\t\"T\": T,\n\t\t\t\"CNOT\": CNOT,\n\t\t\t\"QCBM\": QCBM,\n\t\t\t\"QFT\": QFT\n\t\t}\n\t\tthis.state  = this.data.X;\n\t\tthis.state.title = \"X\";\n\t}\n\n\thandleClick(evt){\n\t\tlet newState = {title: evt, ...this.data[evt]}  ;\n\t\tthis.setState(newState);\n\t}\n\n\trender() {\n  \treturn (\n\t\t\t<div>\n\t\t\t\t<Grid container>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<h1 align={\"center\"}>Quantum Benchmarks</h1>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t  <Grid container>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t</Grid>\n\t\t\t  \t<Grid item xs={1}> \n\t\t\t  \t\t<List \n\t\t\t  \t\t\tcomponent=\"nav\"\n\t\t\t  \t\t\taria-labelledby=\"nested-list-subheader\">\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"X\")} >\n\t\t\t  \t\t\t\t<ListItemText primary=\"X\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"H\")}>\n\t\t\t  \t\t\t\t<ListItemText primary=\"H\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"T\")} >\n\t\t\t  \t\t\t\t<ListItemText primary=\"T\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"CNOT\")} >\n\t\t\t  \t\t\t\t<ListItemText primary=\"CNOT\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"QCBM\")} >\n\t\t\t  \t\t\t\t<ListItemText primary=\"QCBM\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t<ListItem button onClick={() => this.handleClick(\"QFT\")}>\n\t\t\t  \t\t\t\t<ListItemText primary=\"QFT\"/>\n\t\t\t  \t\t\t</ListItem>\n\t\t\t  \t\t\t\n\t\t\t  \t\t</List>\n\t\t\t  \t</Grid>\n\t\t\t  \t<Grid item xs={8}>\n\t\t\t\t\t\t<h2 align={\"center\"}>{this.state.title}</h2>\n\t\t\t  \t\t<Line data={this.state.data} options={{\n\t\t\t\t\t\t\ttooltips: {\n\t\t\t\t\t\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel: (item) => { console.log(item); return item.yLabel + \" ns\"  },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: (item) => { item[0].xLabel = item[0].xLabel + 4; console.log(item); return item[0].xLabel + \" qubits\" }\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t  \t\t\tscales:{\n\t\t\t  \t\t\tyAxes: [\n\t\t\t  \t\t\t\t{\n\t\t\t  \t\t\t\t\tdisplay: true,\n\t\t\t  \t\t\t\t\tlabelString: \"ns\",\n\t\t\t  \t\t\t\t\ttype: \"logarithmic\",\n\t\t\t  \t\t\t\t\tposition: \"left\",\n\t\t\t  \t\t\t\t\t//ticks: {\n\t\t\t  \t\t\t\t\t//\tcallback: (value, index, values) => {\n\t\t\t  \t\t\t\t\t//\t\tconsole.log(\"Called for value\", index, value, values);\n\t\t\t  \t\t\t\t\t//\t\tif (value === 100000000000) return \"10^11\";\n\t\t\t  \t\t\t\t\t//\t\tif (value === 10000000000) return \"10^10\";\n\t\t\t  \t\t\t\t\t//\t\tif (value === 1000000000) return \"10^9\";\n\t\t\t  \t\t\t\t\t//\t\tif (value === 100000000) return \"10^8\";\n\t\t\t  \t\t\t\t\t//\t\tif (value === 10000000) return \"10^7\";\n\t\t\t  \t\t\t\t\t//\t\tif (value === 1000000) return \"10^6\";\n        \t\t\t\t\t//\t\tif (value === 100000) return \"10^5\";\n        \t\t\t\t\t//\t\tif (value === 10000) return \"10^4\";\n        \t\t\t\t\t//\t\tif (value === 1000) return \"10^3\";\n        \t\t\t\t\t//\t\tif (value === 100) return \"10^2\";\n        \t\t\t\t\t//\t\tif (value === 10) return \"10^1\";\n        \t\t\t\t\t//\t\tif (value === 1) return \"10^0\";\n        \t\t\t\t\t//\t\treturn null;\n\t\t\t  \t\t\t\t\t//\t}\n\t\t\t  \t\t\t\t\t//},\n\t\t\t  \t\t\t\t\t//afterBuildTicks: (chartObj) => {\n        \t\t\t\t\t//\tconst ticks = [100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000,100000000000,1000000000000   ];\n        \t\t\t\t\t//\tchartObj.ticks.splice(0, chartObj.ticks.length);\n        \t\t\t\t\t//\tchartObj.ticks.push(...ticks);\n  \t\t  \t\t\t\t\t//}\n\t\t\t  \t\t\t\t}],\n\t\t\t  \t\t\txAxes: [\n\t\t\t  \t\t\t\t{\n\t\t\t  \t\t\t\t\t\t\t\tlabelString: \"nqubits\"\n\t\t\t  \t\t\t\t}\n\n\t\t\t  \t\t\t],\n\t\t\t  \t\t}\n\t\t\t  \t\t}\n\t\t\t  \t\t}/>\n\t\t\t  \t</Grid>\n\t\t\t\t\t<Grid item xs={2}/>\n\n\t\t\t  </Grid>\n\t\t\t</div>\n  \t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}